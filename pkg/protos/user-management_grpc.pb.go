// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: user-management.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	UserManagementService_SaveUserAccount_FullMethodName                    = "/job_seek.user_management.UserManagementService/SaveUserAccount"
	UserManagementService_GetUserAccount_FullMethodName                     = "/job_seek.user_management.UserManagementService/GetUserAccount"
	UserManagementService_SaveUserSearchPerfence_FullMethodName             = "/job_seek.user_management.UserManagementService/SaveUserSearchPerfence"
	UserManagementService_GetUserSearchPerfence_FullMethodName              = "/job_seek.user_management.UserManagementService/GetUserSearchPerfence"
	UserManagementService_SaveUserJobSearchPredictedPerfence_FullMethodName = "/job_seek.user_management.UserManagementService/SaveUserJobSearchPredictedPerfence"
	UserManagementService_GetUserJobSearchPredictedPerfence_FullMethodName  = "/job_seek.user_management.UserManagementService/GetUserJobSearchPredictedPerfence"
)

// UserManagementServiceClient is the client API for UserManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserManagementServiceClient interface {
	// from user management
	SaveUserAccount(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserResponse, error)
	GetUserAccount(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserAccount, error)
	SaveUserSearchPerfence(ctx context.Context, in *UserSearchPerfence, opts ...grpc.CallOption) (*UserResponse, error)
	GetUserSearchPerfence(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserSearchPerfence, error)
	SaveUserJobSearchPredictedPerfence(ctx context.Context, in *UserJobSearchPredictedPerfence, opts ...grpc.CallOption) (*PredictedPerfenceResponse, error)
	GetUserJobSearchPredictedPerfence(ctx context.Context, in *GetPredictedPerfence, opts ...grpc.CallOption) (*UserJobSearchPredictedPerfence, error)
}

type userManagementServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserManagementServiceClient(cc grpc.ClientConnInterface) UserManagementServiceClient {
	return &userManagementServiceClient{cc}
}

func (c *userManagementServiceClient) SaveUserAccount(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, UserManagementService_SaveUserAccount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) GetUserAccount(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserAccount, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserAccount)
	err := c.cc.Invoke(ctx, UserManagementService_GetUserAccount_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) SaveUserSearchPerfence(ctx context.Context, in *UserSearchPerfence, opts ...grpc.CallOption) (*UserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, UserManagementService_SaveUserSearchPerfence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) GetUserSearchPerfence(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserSearchPerfence, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserSearchPerfence)
	err := c.cc.Invoke(ctx, UserManagementService_GetUserSearchPerfence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) SaveUserJobSearchPredictedPerfence(ctx context.Context, in *UserJobSearchPredictedPerfence, opts ...grpc.CallOption) (*PredictedPerfenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PredictedPerfenceResponse)
	err := c.cc.Invoke(ctx, UserManagementService_SaveUserJobSearchPredictedPerfence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) GetUserJobSearchPredictedPerfence(ctx context.Context, in *GetPredictedPerfence, opts ...grpc.CallOption) (*UserJobSearchPredictedPerfence, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserJobSearchPredictedPerfence)
	err := c.cc.Invoke(ctx, UserManagementService_GetUserJobSearchPredictedPerfence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserManagementServiceServer is the server API for UserManagementService service.
// All implementations must embed UnimplementedUserManagementServiceServer
// for forward compatibility
type UserManagementServiceServer interface {
	// from user management
	SaveUserAccount(context.Context, *UserAccount) (*UserResponse, error)
	GetUserAccount(context.Context, *GetUserRequest) (*UserAccount, error)
	SaveUserSearchPerfence(context.Context, *UserSearchPerfence) (*UserResponse, error)
	GetUserSearchPerfence(context.Context, *GetUserRequest) (*UserSearchPerfence, error)
	SaveUserJobSearchPredictedPerfence(context.Context, *UserJobSearchPredictedPerfence) (*PredictedPerfenceResponse, error)
	GetUserJobSearchPredictedPerfence(context.Context, *GetPredictedPerfence) (*UserJobSearchPredictedPerfence, error)
	mustEmbedUnimplementedUserManagementServiceServer()
}

// UnimplementedUserManagementServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUserManagementServiceServer struct {
}

func (UnimplementedUserManagementServiceServer) SaveUserAccount(context.Context, *UserAccount) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveUserAccount not implemented")
}
func (UnimplementedUserManagementServiceServer) GetUserAccount(context.Context, *GetUserRequest) (*UserAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAccount not implemented")
}
func (UnimplementedUserManagementServiceServer) SaveUserSearchPerfence(context.Context, *UserSearchPerfence) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveUserSearchPerfence not implemented")
}
func (UnimplementedUserManagementServiceServer) GetUserSearchPerfence(context.Context, *GetUserRequest) (*UserSearchPerfence, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSearchPerfence not implemented")
}
func (UnimplementedUserManagementServiceServer) SaveUserJobSearchPredictedPerfence(context.Context, *UserJobSearchPredictedPerfence) (*PredictedPerfenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveUserJobSearchPredictedPerfence not implemented")
}
func (UnimplementedUserManagementServiceServer) GetUserJobSearchPredictedPerfence(context.Context, *GetPredictedPerfence) (*UserJobSearchPredictedPerfence, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserJobSearchPredictedPerfence not implemented")
}
func (UnimplementedUserManagementServiceServer) mustEmbedUnimplementedUserManagementServiceServer() {}

// UnsafeUserManagementServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserManagementServiceServer will
// result in compilation errors.
type UnsafeUserManagementServiceServer interface {
	mustEmbedUnimplementedUserManagementServiceServer()
}

func RegisterUserManagementServiceServer(s grpc.ServiceRegistrar, srv UserManagementServiceServer) {
	s.RegisterService(&UserManagementService_ServiceDesc, srv)
}

func _UserManagementService_SaveUserAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).SaveUserAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_SaveUserAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).SaveUserAccount(ctx, req.(*UserAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_GetUserAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).GetUserAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_GetUserAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).GetUserAccount(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_SaveUserSearchPerfence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearchPerfence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).SaveUserSearchPerfence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_SaveUserSearchPerfence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).SaveUserSearchPerfence(ctx, req.(*UserSearchPerfence))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_GetUserSearchPerfence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).GetUserSearchPerfence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_GetUserSearchPerfence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).GetUserSearchPerfence(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_SaveUserJobSearchPredictedPerfence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserJobSearchPredictedPerfence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).SaveUserJobSearchPredictedPerfence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_SaveUserJobSearchPredictedPerfence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).SaveUserJobSearchPredictedPerfence(ctx, req.(*UserJobSearchPredictedPerfence))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_GetUserJobSearchPredictedPerfence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPredictedPerfence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).GetUserJobSearchPredictedPerfence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserManagementService_GetUserJobSearchPredictedPerfence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).GetUserJobSearchPredictedPerfence(ctx, req.(*GetPredictedPerfence))
	}
	return interceptor(ctx, in, info, handler)
}

// UserManagementService_ServiceDesc is the grpc.ServiceDesc for UserManagementService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserManagementService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "job_seek.user_management.UserManagementService",
	HandlerType: (*UserManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveUserAccount",
			Handler:    _UserManagementService_SaveUserAccount_Handler,
		},
		{
			MethodName: "GetUserAccount",
			Handler:    _UserManagementService_GetUserAccount_Handler,
		},
		{
			MethodName: "SaveUserSearchPerfence",
			Handler:    _UserManagementService_SaveUserSearchPerfence_Handler,
		},
		{
			MethodName: "GetUserSearchPerfence",
			Handler:    _UserManagementService_GetUserSearchPerfence_Handler,
		},
		{
			MethodName: "SaveUserJobSearchPredictedPerfence",
			Handler:    _UserManagementService_SaveUserJobSearchPredictedPerfence_Handler,
		},
		{
			MethodName: "GetUserJobSearchPredictedPerfence",
			Handler:    _UserManagementService_GetUserJobSearchPredictedPerfence_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user-management.proto",
}
