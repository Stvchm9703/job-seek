syntax = "proto3";
package job_seek.user_management;
option go_package = "job-seek/pkg/protos";

message GetUserRequest { string user_id = 1; }

message UserResponse {
  string status = 1;
  string user_id = 2;
  string message = 3;
}

message UserAccount {
  string user_id = 1;
  string user_name = 2;
  string user_password = 3;
  string user_email = 4;
  string user_phone = 5;
  string user_address = 6;
}

message UserSearchPerfence {
  string record_id = 1;
  string user_id = 2; // seeker-id
  string job_id = 3;  // job-id
  repeated PerfenceKeyword keywords = 4;
}

message PerfenceKeyword {
  string kw_id = 1;
  string user_id = 2;   // seeker-id
  string keyword = 3;   //
  string value = 4;     //
  string type = 5;      //
  bool is_positive = 6; // true: positive, false: negative
}

message GetPredictedPerfence { string record_id = 1; }

message PredictedPerfenceResponse {
  string status = 1;
  string user_id = 2;
  string record_id = 3;
  string message = 4;
}

message UserJobSearchPredictedPerfence {
  string record_id = 1;
  string user_id = 2; // seeker-id
  string job_id = 3;  // job-id
  string site_key = 4;
  string locale = 5;
  repeated PerfenceKeyword job_keyword = 6; //
  int32 score = 7;                          // 0-100
  int32 count = 8;                          // 0-100
}

message PredictedPerfenceMap {
  string user_id = 1;
  string map_id = 2;
}

service UserManagementService {
  // from user management
  rpc SaveUserAccount(UserAccount) returns (UserResponse);
  rpc GetUserAccount(GetUserRequest) returns (UserAccount);

  // store point of user search perfence
  rpc SaveUserSearchPerfence(UserSearchPerfence) returns (UserResponse);
  rpc UpdateUserSearchPerfence(UserSearchPerfence) returns (UserResponse);
  rpc GetUserSearchPerfence(GetUserRequest) returns (UserSearchPerfence);
  //
  rpc SaveUserJobSearchPredictedPerfence(UserJobSearchPredictedPerfence)
      returns (PredictedPerfenceResponse);
  rpc GetUserJobSearchPredictedPerfence(GetPredictedPerfence)
      returns (UserJobSearchPredictedPerfence);
  rpc CreateUserJobSearchPredictedPerfence(
      stream UserJobSearchPredictedPerfence)
      returns (stream PredictedPerfenceResponse);
}