// Path: job-seek/pkg/database/model/
// code generated by tools/generate_db_model_query/main.go

package model

import (
	"fmt"
	"job-seek/pkg/protos"

	surrealdb "github.com/surrealdb/surrealdb.go"
)

type PreferenceKeywordModel struct {
	KwId       string `json:"kw_id"`
	UserId     string `json:"user_id"`
	Keyword    string `json:"keyword"`
	Value      string `json:"value"`
	Type       string `json:"type"`
	IsPositive bool   `json:"is_positive"`
}

func (m *PreferenceKeywordModel) ToProto() protos.PreferenceKeyword {
	return protos.PreferenceKeyword{
		KwId:       m.KwId,
		UserId:     m.UserId,
		Keyword:    m.Keyword,
		Value:      m.Value,
		Type:       m.Type,
		IsPositive: m.IsPositive,
	}
}

func (m *PreferenceKeywordModel) FromProto(p *protos.PreferenceKeyword) {
	m.KwId = p.KwId
	m.UserId = p.UserId
	m.Keyword = p.Keyword
	m.Value = p.Value
	m.Type = p.Type
	m.IsPositive = p.IsPositive
}

func (m *PreferenceKeywordModel) GetModel(db *surrealdb.DB) (*protos.PreferenceKeyword, error) {
	result, err := db.Select(fmt.Sprintf("PreferenceKeyword:%s", m.KwId))
	if err != nil {
		return nil, err
	}

	var data *protos.PreferenceKeyword
	err = surrealdb.Unmarshal(result, data)
	if err != nil {
		return nil, err
	}

	return data, nil

}

func (m *PreferenceKeywordModel) CreateModel(sd *surrealdb.DB) error {
	if sd == nil {
		return fmt.Errorf("database connection is nil")
	}

	result, err := sd.Query(`
		LET $kw_id = PreferenceKeyword:uuid();
		INSERT INTO PreferenceKeyword:$kw_id {
			KwId: $kw_id,
			UserId: $UserId,
			Keyword: $Keyword,
			Value: $Value,
			Type: $Type,
			IsPositive: $IsPositive
		};
	`, m)
	if err != nil {
		return err
	}
	var data *PreferenceKeywordModel
	err = surrealdb.Unmarshal(result, data)
	if err != nil {
		return err
	}
	m.KwId = data.KwId
	return nil
}

func (m *PreferenceKeywordModel) UpdateModel(sd *surrealdb.DB) error {
	if sd == nil {
		return fmt.Errorf("database connection is nil")
	}
	_, err := sd.Update(fmt.Sprintf("PreferenceKeyword:%s", m.KwId), m)
	return err
}
